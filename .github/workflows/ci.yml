name: ci
on:
  push:
    branches:
      - main
    tags:
      - '*'
concurrency:
  group: '${{ github.workflow }}-${{ !contains(github.event.pull_request.labels.*.name, ''ci-test-flaky'') && github.head_ref || github.run_id }}'
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: '${{ matrix.job }} ${{ matrix.profile }} ${{ matrix.os }}'
    runs-on: '${{ matrix.runner || matrix.os }}'
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            job: test
            profile: release
          - os: windows-2022
            runner: windows-2022
            job: test
            profile: release
          - os: ubuntu-20.04
            job: test
            profile: release
            use_sysroot: true
    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: full
    steps:
      - name: Configure git
        run: |-
          git config --global core.symlinks true
          git config --global fetch.parallel 32
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
          submodules: false
          path: byt
      - uses: actions/checkout@v3
        with:
          repository: "skorfmann/deno"
          ref: "rust-cli"
          path: deno
      - name: 'Create source tarballs (release, linux)'
        if: |-
          startsWith(matrix.os, 'ubuntu') &&
          matrix.profile == 'release' &&
          matrix.job == 'test' &&
          github.repository == 'byt-dev/runtime' &&
          startsWith(github.ref, 'refs/tags/')
        run: |-
          cd byt
          mkdir -p target/release
          tar --exclude=".git*" --exclude=target  \
              -czvf target/release/byt_src.tar.gz -C .. byt
      - uses: dtolnay/rust-toolchain@stable
      - name: Configure canary build
        if: |-
          matrix.profile == 'release' &&
          github.repository == 'byt-dev/runtime' &&
          github.ref == 'refs/heads/main'
        shell: bash
        run: echo "BYT_CANARY=true" >> $GITHUB_ENV
      - name: Cache Cargo home
        uses: actions/cache@v3
        with:
          path: |-
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: '18-cargo-home-${{ matrix.os }}-${{ hashFiles(''Cargo.lock'') }}'
      - name: Restore cache build output (PR)
        uses: actions/cache/restore@v3
        if: 'github.ref != ''refs/heads/main'' && !startsWith(github.ref, ''refs/tags/'')'
        with:
          path: |-
            ./target
            !./target/*/gn_out
            !./target/*/*.zip
            !./target/*/*.tar.gz
          key: never_saved
          restore-keys: '19-cargo-target-${{ matrix.os }}-${{ matrix.profile }}-'
      - name: Shallow clone crates.io index
        shell: bash
        run: |-
          if [ ! -d ~/.cargo/registry/index/github.com-1ecc6299db9ec823/.git ]
          then
            git clone --depth 1 --no-checkout                      \
                      https://github.com/rust-lang/crates.io-index \
                      ~/.cargo/registry/index/github.com-1ecc6299db9ec823
          fi
        if: '!(github.event_name == ''pull_request'' && matrix.skip_pr) && (steps.exit_early.outputs.EXIT_EARLY != ''true'')'
      - name: Build fastci
        if: 'matrix.profile == ''fastci'''
        run: cd byt && cargo build --locked --all-targets
        env:
          CARGO_PROFILE_DEV_DEBUG: 0
      - name: Build release
        if: |-
          matrix.profile == 'release' && (matrix.use_sysroot ||
          (github.repository == 'byt-dev/runtime' &&
          (github.ref == 'refs/heads/main' ||
          startsWith(github.ref, 'refs/tags/'))))
        run: cd byt && cargo build --release --locked --all-targets
      - name: Codesign executable macOS
        if: |-
          !(github.event_name == 'pull_request' && matrix.skip_pr) && startsWith(matrix.os, 'macOS') &&
          matrix.job == 'test' &&
          matrix.profile == 'release' &&
          github.repository == 'byt-dev/runtime'
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          IDENTITY_ID: ${{ secrets.IDENTITY_ID }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "${MACOS_CERTIFICATE_PWD}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${MACOS_CERTIFICATE_PWD}" build.keychain
          security import certificate.p12 -k build.keychain -P "${MACOS_CERTIFICATE_PWD}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${MACOS_CERTIFICATE_PWD}" build.keychain
          /usr/bin/codesign --force -s ${IDENTITY_ID} ./byt/target/release/byt -v
      - name: Upload PR artifact (macOS)
        if: |-
          matrix.profile == 'release' && (startsWith(matrix.os, 'macOS') &&
          (github.repository == 'byt-dev/runtime' &&
          (github.ref == 'refs/heads/main' ||
          startsWith(github.ref, 'refs/tags/'))))
        uses: actions/upload-artifact@v3
        with:
          name: 'byt-${{ github.event.number }}'
          path: byt/target/release/byt
      - name: Pre-release (linux)
        if: |-
          startsWith(matrix.os, 'ubuntu') &&
          matrix.job == 'test' &&
          matrix.profile == 'release' &&
          github.repository == 'byt-dev/runtime'
        run: |-
          cd byt/target/release
          zip -r byt-x86_64-unknown-linux-gnu.zip byt
      - name: Pre-release (mac)
        if: |-
          !(github.event_name == 'pull_request' && matrix.skip_pr) && (steps.exit_early.outputs.EXIT_EARLY != 'true' && (startsWith(matrix.os, 'macOS') &&
          matrix.job == 'test' &&
          matrix.profile == 'release' &&
          github.repository == 'byt-dev/runtime' &&
          (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))))
        run: |-
          cd byt/target/release
          zip -r byt-x86_64-apple-darwin.zip byt
      - name: Pre-release (windows)
        if: |-
          !(github.event_name == 'pull_request' && matrix.skip_pr) && (steps.exit_early.outputs.EXIT_EARLY != 'true' && (startsWith(matrix.os, 'windows') &&
          matrix.job == 'test' &&
          matrix.profile == 'release' &&
          github.repository == 'byt-dev/runtime' &&
          (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))))
        run: Compress-Archive -CompressionLevel Optimal -Force -Path byt/target/release/byt.exe -DestinationPath byt/target/release/byt-x86_64-pc-windows-msvc.zip
      - name: Test fastci
        if: 'matrix.job == ''test'' && matrix.profile == ''fastci'''
        run: |-
          cd byt
          cargo test --locked --lib
          cargo test --locked --test '*'
        env:
          CARGO_PROFILE_DEV_DEBUG: 0
      - name: Test release
        if: |-
          !(github.event_name == 'pull_request' && matrix.skip_pr) && (steps.exit_early.outputs.EXIT_EARLY != 'true' && (matrix.job == 'test' && matrix.profile == 'release' &&
          (matrix.use_sysroot || (
          github.repository == 'byt-dev/runtime' &&
          github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')))))
        run: cd byt && cargo test --release --locked
      - name: Upload release to GitHub
        uses: softprops/action-gh-release@v0.1.15
        if: |-
          !(github.event_name == 'pull_request' && matrix.skip_pr) && (steps.exit_early.outputs.EXIT_EARLY != 'true' && (matrix.job == 'test' &&
          matrix.profile == 'release' &&
          github.repository == 'byt-dev/runtime' &&
          startsWith(github.ref, 'refs/tags/')))
        with:
          files: |-
            byt/target/release/byt-x86_64-pc-windows-msvc.zip
            byt/target/release/byt-x86_64-unknown-linux-gnu.zip
            byt/target/release/byt-x86_64-apple-darwin.zip
            byt/target/release/byt_src.tar.gz
          draft: true
      - name: Save cache build output (main)
        uses: actions/cache/save@v3
        if: '!(github.event_name == ''pull_request'' && matrix.skip_pr) && (steps.exit_early.outputs.EXIT_EARLY != ''true'' && ((matrix.profile == ''release'' || matrix.profile == ''fastci'') && github.ref == ''refs/heads/main''))'
        with:
          path: |-
            ./byt/target
            !./byt/target/*/gn_out
            !./byt/target/*/*.zip
            !./byt/target/*/*.tar.gz
          key: '18-cargo-target-${{ matrix.os }}-${{ matrix.profile }}-${{ github.sha }}'